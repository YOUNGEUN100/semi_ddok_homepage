<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
	
	<mapper namespace="com.example.mini.mapper.LivingMapper">
		
		<!-- 카드 리스트-->		
		<select id="selectCardList" parameterType="hashmap" resultType="com.example.mini.model.Living">
			SELECT A.CARD_NO,
				CARD_NAME,
        		CARD_HITS,
        		DELETE_YN,
        		A.CDATETIME,
		        A.UDATETIME,
        		IMG_NAME,
        		IMG_PATH
			FROM T4_CARDINFO A
			LEFT JOIN (SELECT CARD_NO,
					IMG_NAME,
					CONCAT(IMG_PATH, IMG_NAME) AS IMG_PATH
					FROM T4_CARDIMG
            		WHERE THUMBNAIL_YN = 'Y')B ON A.CARD_NO = B.CARD_NO;		
		</select>
		
		
		<!-- 카드 슬라이드-->	
		<select id="selectCardInfo" parameterType="hashmap" resultType="com.example.mini.model.Living">
			SELECT IMGFILE_NO,
				CARD_NO,
        		CONCAT(IMG_PATH,IMG_NAME)IMG_PATH,
        		CDATETIME,
        		UDATETIME
			FROM T4_CARDIMG
			WHERE THUMBNAIL_YN = 'N' AND CARD_NO = #{cardNo};
		</select>
		
		<!-- 정책 리스트-->
		<select id="selectPolList" parameterType="hashmap" resultType="com.example.mini.model.Community">
			SELECT 
				B.BOARD_NO AS BOARD_NO,
				B.USER_ID AS USER_ID,
				U.NICK AS NICK, 
				U.STATUS AS STATUS,
				TITLE, 
				CONTENT, 
				HITS, 
				CATEGORY, 
				DATE_FORMAT(B.CDATETIME,'%Y-%m-%d') AS CDATETIME, 
				DATE_FORMAT(B.UDATETIME,'%Y-%m-%d') AS UDATETIME, 
				DELETE_YN,
				FILE_PATH
			FROM T4_BOARD B
			LEFT JOIN (SELECT USER_ID, NICK, STATUS FROM T4_USER) U ON U.USER_ID = B.USER_ID
			LEFT JOIN T4_FILES F ON F.BOARD_NO = B.BOARD_NO
			WHERE BOARD_KIND = 'POL' AND DELETE_YN = 'N'
			<if test = "order == 'recent'">
			ORDER BY CATEGORY DESC ,CDATETIME DESC
        	</if>
        	<if test = "order == 'view'">
        	ORDER BY CATEGORY DESC ,HITS DESC
        	</if>
			LIMIT #{startNum}, 10
		</select>
		
		<!--커뮤니티 조회수-->
		<update id="updatePolCnt" parameterType="hashmap">
			UPDATE T4_BOARD
			SET HITS = HITS + 1
			WHERE BOARD_NO = #{boardNo}
		</update>
		
		<!--커뮤니티 글 리스트 개수 -->
		<select id="selectPolCnt" parameterType="hashmap" resultType="int">
	        SELECT COUNT(*) AS CNT
			FROM T4_BOARD
			WHERE BOARD_KIND = 'POL' AND DELETE_YN = 'N'
		</select>
		
		<!--커뮤니티 글보기-->
		<select id="selectPolInfo" parameterType="hashmap" resultType="com.example.mini.model.Community">
			  SELECT 
				B.BOARD_NO, 
				B.USER_ID AS USER_ID,
				U.NICK AS NICK, 
				U.STATUS AS STATUS,
				TITLE, 
				CONTENT, 
				HITS, 
				CATEGORY, 
				B.CDATETIME AS CDATETIME, 
				B.UDATETIME AS UDATETIME, 
				DELETE_YN,
				FILE_PATH
			FROM T4_BOARD B
			LEFT JOIN (SELECT USER_ID, NICK, STATUS FROM T4_USER) U ON U.USER_ID = B.USER_ID
			LEFT JOIN T4_FILES F ON F.BOARD_NO = B.BOARD_NO
			WHERE BOARD_KIND = 'POL'
			<if test="boardNo != '' and boardNo != null">
			AND B.BOARD_NO = #{boardNo}
			</if>
		</select>
		
		<!--댓글 리스트 -->
		<select id="selectComment" parameterType="hashmap" resultType="com.example.mini.model.Community">
			SELECT 
				COMMENT_NO,
				BOARD_NO,
				C.USER_ID, 
				CONTENT AS COMMENT, 
				CDATETIME, 
				UDATETIME,
				U.NICK AS NICK,
				DELETE_YN
			FROM T4_COMMENT C
			LEFT JOIN T4_USER U ON U.USER_ID = C.USER_ID
			WHERE DELETE_YN = 'N' AND BOARD_NO = #{boardNo}  
		</select>
		
		<!-- 댓글 등록 -->
		<insert id="insertComment" parameterType="HashMap">
			 INSERT INTO T4_COMMENT 
				(COMMENT_NO,
				BOARD_NO, 
				USER_ID, 
				CONTENT, 
				CDATETIME, 
				UDATETIME,
				DELETE_YN)
		    VALUES (NULL, #{boardNo},#{userId},#{comment},now(),now(),'N')
		</insert>
		
		<!-- 정책 등록 -->
		<insert id="insertPol" parameterType="HashMap" useGeneratedKeys="true" keyProperty="id" keyColumn="board_no">
			INSERT INTO T4_BOARD (
				BOARD_KIND,
				BOARD_NO, 
				USER_ID, 
				TITLE, 
				CONTENT, 
				CATEGORY, 
				CDATETIME, 
				UDATETIME,
				DELETE_YN,
				HITS)
			VALUES ('POL', NULL, #{userId}, #{title}, #{content}, #{category}, now(), now(),'N',0)
		</insert>
		
				<!-- 정책 글 수정 -->
		<update id="updatePol" parameterType="HashMap" useGeneratedKeys="true" keyProperty="id2" keyColumn="board_no">
			UPDATE T4_BOARD
			SET TITLE = #{title},
				CONTENT = #{content},
				UDATETIME = NOW(),
				BOARD_NO = #{boardNo}
			WHERE BOARD_NO = #{boardNo}
		</update>
		
				<!-- 커뮤니티 게시글 삭제 -->
		<update id="deletePol" parameterType="hashmap">
			UPDATE T4_BOARD
			SET DELETE_YN = 'Y'
			WHERE BOARD_NO = #{boardNo}
		</update>
		
		<!-- 댓글 삭제 -->
		<update id="deleteComment" parameterType="hashmap">
			UPDATE T4_COMMENT
			SET DELETE_YN = 'Y'
			WHERE COMMENT_NO = #{commentNo}
		</update>
		
	</mapper>